<UserControl x:Class="CargoLampTest.View.USB7230View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:uc="clr-namespace:CargoLampTest.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:CargoLampTest.ViewModel"
             mc:Ignorable="d" 
             xmlns:conveters="clr-namespace:CargoLampTest.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             DataContext="{Binding USB7230, Source={StaticResource Locator}}"
             Height="auto" Width="auto"
             
             >


    <UserControl.Resources>
        <!--conveters:ColorToSCBrushConverter x:Key="ColorToSCBrushConverter"/-->

        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="현대하모니 M" />
        </Style>
        <Style x:Key="TextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="현대하모니 M" />
        </Style>
        <Style x:Key="LabelGridStyle" TargetType="Grid">
            <Setter Property="Background" Value="LightGray" />
        </Style>
        <Style x:Key="TextGridStyle" TargetType="Grid">
            <Setter Property="Background" Value="WhiteSmoke" />
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="false">
                            <BulletDecorator.Bullet>
                                <Border Background="Blue" Width="50" Height="50"
                                        BorderThickness="5" CornerRadius="5">
                                    <Microsoft_Windows_Themes:BulletChrome IsChecked="{TemplateBinding IsChecked}" 
                                          RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                          RenderPressed="{TemplateBinding IsPressed}"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="uc:LedControl1">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="uc:LedControl1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid Background="Transparent" Name="grd"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Stretch" 
                            Width="{Binding Path=ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">

                                <Ellipse x:Name="LedBorder" 
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="2"
                                    Stretch="Uniform"/>

                                <Ellipse x:Name="CenterGlow" Stretch="Uniform">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="White" Offset="-0.25"/>
                                            <GradientStop Color="Transparent" Offset="0.91"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>

                                <Ellipse x:Name="CornerLight" Stretch="Uniform" Margin="2">
                                    <Ellipse.Fill>
                                        <RadialGradientBrush Center="0.15 0.15" RadiusX="0.5" RadiusY="0.5">
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>

                            <ContentPresenter x:Name="content" Grid.Column="1" Margin="4,0,0,0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            RecognizesAccessKey="True"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="LedBorder" Property="Fill" Value="{Binding Path=OnColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding Path=OnColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="LedBorder" Property="Fill" Value="{Binding Path=OffColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding Path=OffColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="CenterGlow" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Opacity="1">
                                            <GradientStop Color="Transparent" Offset="-0.5" />
                                            <GradientStop Color="#888" Offset="1" />
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="content" Property="TextElement.Foreground" Value="#888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignFlatToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="#616161"/>
            <Setter Property="Background" Value="#e0e0e0"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid ClipToBounds="True" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.23" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale">
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale">
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale">
                                                    <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale">
                                                    <LinearDoubleKeyFrame Value="1.0" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale" To="1.0" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale" To="1.0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="CheckedEllipseScale" To="0" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="CheckedEllipseScale" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse Fill="Transparent" x:Name="HoverEllipse" Stroke="Transparent" StrokeThickness="1" />
                            <Ellipse Fill="{TemplateBinding Background}" x:Name="CheckedEllipse" RenderTransformOrigin="0.5, 0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.0" ScaleY="1.0" x:Name="CheckedEllipseScale"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="HoverEllipse" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                            </Trigger>
                            <!-- TODO
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="normal" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
						</Trigger>
						-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MaterialDesignFlatPrimaryToggleButton" TargetType="{x:Type ToggleButton}" 
               BasedOn="{StaticResource MaterialDesignFlatToggleButton}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50"/>
        </Style>
        <Style x:Key="MaterialDesignActionLightToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
        </Style>

    </UserControl.Resources>

    <Grid Width="1100" Height="928" Background="WhiteSmoke">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="0.7*"/>

        </Grid.RowDefinitions>
        <!-- 화면위쪽 -->
        <Grid Grid.Column="0" Grid.Row="0" Margin="0 2 0 0" Width="1100" Grid.ColumnSpan="2" >

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.75*"/>
                <ColumnDefinition Width="0.75*"/>
                <ColumnDefinition Width="0.75*"/>
                <ColumnDefinition Width="0.75*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <Grid  Grid.Row="0" Grid.Column="0" Margin="2 0 0 2" Style="{StaticResource LabelGridStyle}" >
                <TextBlock Style="{StaticResource LabelStyle}" Text="DIO ID" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 0"></TextBlock>
            </Grid>

            <Grid  Grid.Row="1" Grid.Column="0" Margin="2 0 0 2" Style="{StaticResource TextGridStyle}" >

                <TextBox x:Name="NameTextBox" materialDesign:HintAssist.Hint="DIO ID번호" 
                         FontSize="24" FontFamily="현대하모니 M" HorizontalAlignment="Center"  VerticalAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="DIO_ID" UpdateSourceTrigger="PropertyChanged">

                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid  Grid.Row="0"   Grid.Column="5" Grid.ColumnSpan="3"  HorizontalAlignment="Right" Margin="2 0 0 2" Style="{StaticResource LabelGridStyle}" >
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 0 0">
                    <Button Content="시작" Command="{Binding StartCommand}" IsEnabled ="{Binding IsStartButtonEnabled}" Height="50" Width="135" Margin=" 0 0 2 0" FontFamily="현대하모니 M" FontSize="20">
                    </Button>
                    <Button Content="정지" Command="{Binding StopCommand}"  IsEnabled ="{Binding IsStopButtonEnabled}" Height="50" Width="135" Margin=" 0 0 2 0" FontFamily="현대하모니 M" FontSize="20">
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Grid.Row="1">
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1">
        </Grid>


        <!--DIO관련-->
        <Grid  Grid.Row="2"   Grid.Column="0" Style="{StaticResource LabelGridStyle}" >
            <TextBlock Style="{StaticResource LabelStyle}" Text="DIO Input" FontSize="50" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 0">

            </TextBlock>
        </Grid>
        <Grid  Grid.Row="2"   Grid.Column="1" Style="{StaticResource LabelGridStyle}" >
            <TextBlock Style="{StaticResource LabelStyle}" Text="DIO Output" FontSize="50" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 0">

            </TextBlock>
        </Grid>

        <Grid  Grid.Row="3"   Grid.Column="0" Grid.ColumnSpan="1" Margin="50" Style="{StaticResource TextGridStyle}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>

            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>

            </Grid.RowDefinitions>

            <TextBlock Text="Start" FontSize="20" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" ></TextBlock>
            <uc:Led  IsActive="{Binding Path=LedStatus[0], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="0" Grid.Row="0" Margin="0,20,0,0" />

            <TextBlock Text="Fail" FontSize="20" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="0" ></TextBlock>
            <uc:Led  IsActive="{Binding Path= LedStatus[1], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="1" Grid.Row="0" Margin="0,20,0,0" />

            <TextBlock Text="Detection" FontSize="20" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[2], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="2" Grid.Row="0" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="0" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[3], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="3" Grid.Row="0" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[4], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="0" Grid.Row="1" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[5], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="1" Grid.Row="1" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" ></TextBlock>
            <uc:Led  IsActive="{Binding Path= LedStatus[6], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="2" Grid.Row="1" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[7], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="3" Grid.Row="1" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[8], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="0" Grid.Row="2" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="2" ></TextBlock>
            <uc:Led  IsActive="{Binding Path= LedStatus[9], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="1" Grid.Row="2" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="2" ></TextBlock>
            <uc:Led  IsActive="{Binding Path= LedStatus[10], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="2" Grid.Row="2" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="2" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[11], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="3" Grid.Row="2" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="3" ></TextBlock>
            <uc:Led  IsActive="{Binding Path= LedStatus[12], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="0" Grid.Row="3" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="3" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[13], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="1" Grid.Row="3" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="3" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[14], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="2" Grid.Row="3" Margin="0,20,0,0" />

            <TextBlock Text="" FontSize="20" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="3" ></TextBlock>
            <uc:Led   IsActive="{Binding Path= LedStatus[15], Mode=TwoWay}" 
                        ColorOn="PaleVioletRed" ColorOff="Gray"
                        ColorNull="DimGray"  Grid.Column="3" Grid.Row="3" Margin="0,20,0,0" />


        </Grid>

        <Grid Grid.Row="3" Grid.Column="1">
            <ItemsControl ItemsSource="{Binding Items}" Grid.IsSharedSizeScope="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel  ItemWidth="120" ItemHeight="100" Margin="0 30 0 0"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                        
                <DataTemplate  DataType="{x:Type vm:SelectableViewModel}">
                        
                    <Border x:Name="Border" Padding="0" BorderThickness="0 0 0 0"
                        BorderBrush="{DynamicResource MaterialDesignDivider}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    SharedSizeGroup="Checkerz" />
                                <ColumnDefinition />
                                
                            </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition Height="1*"/>
                                      </Grid.RowDefinitions>
                                <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                                    Grid.ColumnSpan="2" ToolTip="On"  Margin="1 5 0 0"
                                    IsChecked="{Binding IsSelected, Mode=TwoWay}" >
                                <materialDesign:PackIcon Kind="LightbulbOutline" Height="50" Width="50" />
                            </ToggleButton>
                            <StackPanel
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Margin="0 0 0 0"
                                    Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                                <TextBlock 
                                        FontWeight="Bold" FontSize="20"
                                        Text="{Binding Name}" />
                            </StackPanel>

                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                Value="{DynamicResource MaterialDesignSelection}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
 
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>
